import os
import arcade


WIDTH = 640
HEIGHT = 480

BTN_X = 0
BTN_Y = 1
BTN_WIDTH = 2
BTN_HEIGHT = 3
BTN_LABEL = 4
BTN_IS_CLICKED = 5
BTN_COLOR = 6
BTN_CLICKED_COLOR = 7


player = arcade.Sprite('shag.png', center_x=WIDTH/2, center_y=HEIGHT/1.7, scale=0.5)

start_y = 220
start_x = 300

button2 = [204, 130, 200, 50, "HOME SCREEN", False, arcade.color.BEIGE, arcade.color.WHITE]


def setup():
    arcade.open_window(WIDTH, HEIGHT, "My Arcade Game")
    arcade.set_background_color(arcade.color.BLUE)
    arcade.schedule(update, 1 / 60)
    
    window = arcade.get_window()
    window.on_draw = on_draw
    window.on_key_press = on_key_press
    window.on_key_release = on_key_release
    window.on_mouse_press = on_mouse_press
    window.on_mouse_release = on_mouse_release

    arcade.run()


def update(delta_time):
    pass


def on_draw():
    arcade.start_render()
    arcade.draw_xywh_rectangle_filled(194, 120, 220, 70, arcade.color.BLACK)
    draw_button(button2)
    player.draw()

    arcade.draw_text("YOU WON", start_x, start_y, arcade.color.BLACK, 14, width=200, align="center", anchor_x="center", anchor_y ="center")
    arcade.draw_text("GO HOME SCREEN", 194, 120, arcade.color.BLACK, 14, width = 200, align = "center", anchor_x = "center", anchor_y "center")

def on_key_press(key, modifiers):
    pass


def on_key_release(key, modifiers):
    pass


def on_mouse_press(x, y, button, modifiers):
    print(f"Click at ({x}, {y})")

    if mouse_is_over(x, y, button2):
        button2[BTN_IS_CLICKED] = True


def on_mouse_release(x, y, button, modifiers):
    button2[BTN_IS_CLICKED] = False

def draw_button(button):
    if button[BTN_IS_CLICKED]:
        color = button[BTN_CLICKED_COLOR]
    else:
        color = button[BTN_COLOR]

    arcade.draw_xywh_rectangle_filled(button[BTN_X],
                                      button[BTN_Y],
                                      button[BTN_WIDTH],
                                      button[BTN_HEIGHT],
                                      color)


def mouse_is_over(x, y, button):
    if (x > button[BTN_X] and x < button[BTN_X] + button[BTN_WIDTH] and
            y > button[BTN_Y] and y < button[BTN_Y] + button[BTN_HEIGHT]):
        return True
    else:
        return False


if __name__ == '__main__':
    setup()
